---

# tasks file for osp.servers
- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
      cloud: ospcloud
      state: "{{ item.value.state }}"
      name: "{{ item.value.name }}"
      image: "{{ item.value.image }}"
      flavor: "{{ item.value.flavor }}"
      network: int_network
      key_name: "{{ item.value.key_name }}"
      security_groups: "{{ item.value.security_group }}"
      meta: 
        deployment_name: "{{ item.value.meta.0.deployment_name }}"
        group: "{{ item.value.meta.0.group }}"
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
        curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
        cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  with_dict: "{{ osp_servers }}"
  loop_control:
    label: "{{ item.value.name }}"
  register: openstackvar

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: ospcloud
    state: present
    server: "{{ item.value.name }}"
    network: ext_network
  with_dict: "{{ osp_servers }}"
  loop_control:
    label: "{{ item.value.name }}"
  register: vmFloatingIP   

- name: DISPLAY FLOATING IP (public)
  debug:
    msg: "Server name: {{ openstackvar.results.0.server.name  }}; configured IP: {{ vmFloatingIP.results.0.floating_ip.floating_ip_address }}"
  #ignore_errors:
  ignore_errors: yes

- name: Wait for server to be available
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  with_items: "{{ vmFloatingIP.results }}"
        #with_items: "{{openstackvar.results
  #loop:
  #item.value.name
  loop_control:
    label: "{{ item.item.value.name }}"
  delegate_to: "{{ inventory_hostname }}" 

